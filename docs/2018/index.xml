<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2018s on 5000164 is here</title>
    <link>http://blog.5000164.jp/2018/</link>
    <description>Recent content in 2018s on 5000164 is here</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 14 Jan 2018 08:53:55 +0900</lastBuildDate>
    
	<atom:link href="http://blog.5000164.jp/2018/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scala で JavaFX の Canvas でテキストを表示する</title>
      <link>http://blog.5000164.jp/2018-01-scala_javafx_generate_image/</link>
      <pubDate>Sun, 14 Jan 2018 08:53:55 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2018-01-scala_javafx_generate_image/</guid>
      <description>昨日の記事 ではすでに存在する画像を表示したが、やりたいことは生成したテキストを画像にするということだったので、まずはテキストを表示できるよう</description>
    </item>
    
    <item>
      <title>Scala で JavaFX を使って画像を表示する</title>
      <link>http://blog.5000164.jp/2018-01-scala_javafx_image/</link>
      <pubDate>Sat, 13 Jan 2018 20:59:55 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2018-01-scala_javafx_image/</guid>
      <description>こんな感じ。 1 2 3 4 5 6 7 8val image = new Image(getClass.getResource(&amp;quot;/test.png&amp;quot;).toString) val imageView = new ImageView(image) val root = new StackPane() root.getChildren.add(imageView) val scene = new Scene(root, 350, 350) primaryStage.setTitle(&amp;quot;test&amp;quot;) primaryStage.setScene(scene) primaryStage.show() ポイント 画像を下記のパスに配置して getClass.getResource(&amp;quot;/test.png&amp;quot;).toString でパスを取得すること。 1 2</description>
    </item>
    
    <item>
      <title>Scala の SSL / TLS 通信の中身を見る</title>
      <link>http://blog.5000164.jp/2018-01-view_scala_traffic/</link>
      <pubDate>Fri, 05 Jan 2018 17:48:03 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2018-01-view_scala_traffic/</guid>
      <description>Scala の通信の中身が見たい Scala で API を叩くコードを書いた。 ちゃんと API を叩けているのか知りたい、リクエストとレスポンスが見たいと思った。 プロキシーを通</description>
    </item>
    
  </channel>
</rss>