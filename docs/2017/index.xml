<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2017s on 5000164 is here</title>
    <link>http://blog.5000164.jp/2017/</link>
    <description>Recent content in 2017s on 5000164 is here</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 24 Sep 2017 20:53:36 +0900</lastBuildDate>
    
	<atom:link href="http://blog.5000164.jp/2017/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>デスクの向きを窓に向けたら気持ちがいい</title>
      <link>http://blog.5000164.jp/2017-09-layout/</link>
      <pubDate>Sun, 24 Sep 2017 20:53:36 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2017-09-layout/</guid>
      <description> デスクの向きを窓に向けたら気持ちよかった 今までデスクは壁にしか向けたことがなかった。
何回か部屋の内側に向けるレイアウトを考えたことはあったけど、やっぱりなんかしっくりこない気がしてやめていた。
でも今回やるだけやってみて嫌だったらまた直そうと思ってやってみた。
そしたらとてもよかった。
外の景色とかが見れて気持ちがいい。
おすすめ。
 デスクを窓に向けた様子   </description>
    </item>
    
    <item>
      <title>ケーブルをまとめるために買ったチューブが便利</title>
      <link>http://blog.5000164.jp/2017-09-cable/</link>
      <pubDate>Sun, 10 Sep 2017 23:10:48 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2017-09-cable/</guid>
      <description>ケーブルをまとめるチューブが便利 ケーブルをまとめるチューブを買った。
ケーブルをまとめられて便利。
Amazon | ELECOM ゴチャゴチャなケーブルを整理するチューブ 内径20mm 長さ5.0m ブラック BST-20BK | ELECOM(エレコム) | パソコン・周辺機器 通販</description>
    </item>
    
    <item>
      <title>AWS Lambda の Python 3.6 で LINE Bot を動かす</title>
      <link>http://blog.5000164.jp/2017-08-line_bot/</link>
      <pubDate>Mon, 14 Aug 2017 23:04:38 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2017-08-line_bot/</guid>
      <description>目的 LINE Bot を使って生活を少し便利にしたい。
背景 最近 LINE をよく使ってるから。
なんかちょっとしたメモとか簡単に確認したいなーと思ったから。
たまたま AWS Lambda の料金を調べたら思っていたよりも安かったので使ってみたくなったから。
この記事のスタートとゴール スタートは、 LINE をすでに使っているが、 API などは使ったことがないところ。
ゴールは、 LINE のグループチャットで特定の発言をしたら特定の内容を返してくれるところ。
LINE Bot を使えるように登録する Messaging API の登録をする。
Messaging APIのご紹介 | LINE Business Center
Developer Trial を選ぶ。
LINE BOTの作り方を世界一わかりやすく解説（１）【アカウント準備編】 - Qiita
LINE Bot を使えるように設定する LINE@ MANAGER から以下の感じに Bot を設定する。
 API を利用する Webhook を利用する グループトーク参加を利用する 自動応答メッセージを利用しない 友だち追加時あいさつを利用しない 基本設定アカウントページメニュー非表示  LINE Bot と友だちになってグループトークを作成 QR コードから友だち追加する。
LINE Messaging APIを使用したLINE Botの作り方 - george’s ぶろぐ</description>
    </item>
    
    <item>
      <title>Hugo でシンタックスハイライトを使う</title>
      <link>http://blog.5000164.jp/2017-08-syntax_highlighting/</link>
      <pubDate>Mon, 14 Aug 2017 22:44:23 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2017-08-syntax_highlighting/</guid>
      <description>結論  シンタックスハイライト用の css をテーマで読み込んでおく config.toml に下記の設定を追加  1pygmentscodefences = true 2pygmentsCodeFencesGuessSyntax = true 3pygmentsStyle = &amp;#34;monokai&amp;#34; 4pygmentsUseClasses = true 5pygmentsoptions = &amp;#34;linenos=inline&amp;#34;  背景 コードを見やすくしたいからシンタックスハイライトを使おうと思った。
やってみたら思ったよりもできなかった。
なんか疲れたのでメモ。
手順 Pygments をインストールする シンタックスハイライトするのに必要なやつ。
何も考えずに入れる。
1sudo easy_install Pygments  シンタックスハイライト用の css を生成する カラーコードを直接埋め込む方法もあるけど、クラスで指定した方がかっこいいと思ったのでクラスで指定する。
クラスで指定する場合は css を事前に生成しておいて読むこんでおく必要がある。
下記のコマンドで css を生成する。
デフォルトで用意されていないカラースキーマの使い方がわからなかったので今回は monokai を使う。
1pygmentize -f html -S monokai -a .highlight &amp;gt; monokai.css  生成した css をテーマで読み込む テーマの static ディレクトリに css を置いて header で読み込む。</description>
    </item>
    
    <item>
      <title>Jekyll の記事と WordPress の記事を Hugo にインポートする</title>
      <link>http://blog.5000164.jp/2017-08-import/</link>
      <pubDate>Sun, 13 Aug 2017 05:17:55 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2017-08-import/</guid>
      <description>背景 WordPress から Jekyll に移行した時に記事の移行が面倒で放っておいた。
Hugo に移行することにしたから Jekyll の記事と WordPress の記事を Hugo にインポートすることになった。
つらい。
Hugo に合わせた最終的な形式 こんな感じに統一することを目指す。
記事のファイルの見通しをよくするためにディレクトリを分けて管理したかったので URL は各ファイルで指定する。
1+++2title = &amp;#34;Jekyll の記事と WordPress の記事を Hugo にインポートする&amp;#34;3date = 2017-08-13T04:26:50+09:004url = &amp;#34;2017-08-import&amp;#34;5+++67##記事内容 89つらつら  手順 実際に行ったインポート作業の内容はこちら。
Feature import article by 5000164 · Pull Request #2 · 5000164/blog
WordPress の記事を Markdown 形式に変換する 最初は Jekyll に移行しようと思ってたのでこれを使いました。
benbalter/wordpress-to-jekyll-exporter: One-click WordPress plugin that converts all posts, pages, taxonomies, metadata, and settings to Markdown and YAML which can be dropped into Jekyll</description>
    </item>
    
    <item>
      <title>ブログを Hugo に移行しました</title>
      <link>http://blog.5000164.jp/2017-08-blog/</link>
      <pubDate>Sun, 13 Aug 2017 04:19:22 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2017-08-blog/</guid>
      <description>管理しやすいブログにしたかった 前は Jekyll で GitHub の機能を使ってブログを公開していたが、パソコンを変えたら環境構築が面倒でブログの環境を作ってなかった。
だからもっとシンプルな構成で管理したくて興味があった Hugo に乗り換えた。
ついでに過去の記事をインポートした Jekyll に移行した時に、その前の WordPress の記事をインポートしていなかった。
それをサボっていたせいで WordPress と Jekyll の両方の記事をインポートしなきゃいけなくて手間だった。
やっとブログ環境を手に入れた これで更新し放題や。</description>
    </item>
    
  </channel>
</rss>