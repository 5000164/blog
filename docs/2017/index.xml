<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2017s on 5000164 is here</title>
    <link>http://blog.5000164.jp/2017/</link>
    <description>Recent content in 2017s on 5000164 is here</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 14 Aug 2017 22:44:23 +0900</lastBuildDate>
    
	<atom:link href="http://blog.5000164.jp/2017/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo でシンタックスハイライトを使う</title>
      <link>http://blog.5000164.jp/2017-08-syntax_highlighting/</link>
      <pubDate>Mon, 14 Aug 2017 22:44:23 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2017-08-syntax_highlighting/</guid>
      <description>結論  シンタックスハイライト用の css をテーマで読み込んでおく config.toml に下記の設定を追加  1 pygmentscodefences = true 2 pygmentsCodeFencesGuessSyntax = true 3 pygmentsStyle = &amp;quot;monokai&amp;quot; 4 pygmentsUseClasses = true 5 pygmentsoptions = &amp;quot;linenos=inline&amp;quot;  背景 コードを見やすくしたいからシンタックスハイライトを使おうと思った。
やってみたら思ったよりもできなかった。
なんか疲れたのでメモ。
手順 Pygments をインストールする シンタックスハイライトするのに必要なやつ。
何も考えずに入れる。
1 sudo easy_install Pygments  シンタックスハイライト用の css を生成する カラーコードを直接埋め込む方法もあるけど、クラスで指定した方がかっこいいと思ったのでクラスで指定する。
クラスで指定する場合は css を事前に生成しておいて読むこんでおく必要がある。
下記のコマンドで css を生成する。
デフォルトで用意されていないカラースキーマの使い方がわからなかったので今回は monokai を使う。
1 pygmentize -f html -S monokai -a .highlight &amp;gt; monokai.css  生成した css をテーマで読み込む テーマの static ディレクトリに css を置いて header で読み込む。</description>
    </item>
    
    <item>
      <title>Jekyll の記事と WordPress の記事を Hugo にインポートする</title>
      <link>http://blog.5000164.jp/2017-08-import/</link>
      <pubDate>Sun, 13 Aug 2017 05:17:55 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2017-08-import/</guid>
      <description>背景 WordPress から Jekyll に移行した時に記事の移行が面倒で放っておいた。
Hugo に移行することにしたから Jekyll の記事と WordPress の記事を Hugo にインポートすることになった。
つらい。
Hugo に合わせた最終的な形式 こんな感じに統一することを目指す。
記事のファイルの見通しをよくするためにディレクトリを分けて管理したかったので URL は各ファイルで指定する。
1 +++ 2 title = &amp;quot;Jekyll の記事と WordPress の記事を Hugo にインポートする&amp;quot; 3 date = 2017-08-13T04:26:50+09:00 4 url = &amp;quot;2017-08-import&amp;quot; 5 +++ 6  7 ## 記事内容 8  9 つらつら  手順 実際に行ったインポート作業の内容はこちら。
Feature import article by 5000164 · Pull Request #2 · 5000164/blog
WordPress の記事を Markdown 形式に変換する 最初は Jekyll に移行しようと思ってたのでこれを使いました。</description>
    </item>
    
    <item>
      <title>ブログを Hugo に移行しました</title>
      <link>http://blog.5000164.jp/2017-08-blog/</link>
      <pubDate>Sun, 13 Aug 2017 04:19:22 +0900</pubDate>
      
      <guid>http://blog.5000164.jp/2017-08-blog/</guid>
      <description>管理しやすいブログにしたかった 前は Jekyll で GitHub の機能を使ってブログを公開していたが、パソコンを変えたら環境構築が面倒でブログの環境を作ってなかった。
だからもっとシンプルな構成で管理したくて興味があった Hugo に乗り換えた。
ついでに過去の記事をインポートした Jekyll に移行した時に、その前の WordPress の記事をインポートしていなかった。
それをサボっていたせいで WordPress と Jekyll の両方の記事をインポートしなきゃいけなくて手間だった。
やっとブログ環境を手に入れた これで更新し放題や。</description>
    </item>
    
  </channel>
</rss>