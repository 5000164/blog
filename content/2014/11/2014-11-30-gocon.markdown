+++
layout: post
title: "シンプルさ - 「Go Conference 2014 autumn」に参加しました"
date: 2014-11-30 23:04:02 +0900
comments: true
categories: 
+++

「Go Conference 2014 autumn」に参加しました
====
イベントの詳細はこちら。  
[Go Conference 2014 autumn - connpass](http://gocon.connpass.com/event/9748/)  
[GoCon/2014autumn.rst at master · GoCon/GoCon](https://github.com/GoCon/GoCon/blob/master/2014autumn.rst)  
  
内容についてはこちら。  
[#goconに関するツイート](https://twitter.com/hashtag/gocon)  
[Go Conference 2014 autumn - Togetterまとめ](http://togetter.com/li/751700)

わからないことが多かった
====
Go に興味があって参加した。  
けど、触ったことがなかったので、わからない部分が多かった。  
でも刺激はもらえた。

シンプル
====
Go はシンプルさを大事にしているとのことだった。  
楽に書くのと、読みやすく書くのはトレードオフで、読みやすさに重点を置くべき、とどこかで言っていた気がする。  
最近どこかで、プログラマはプログラムを書いてる時間よりも読んでいる時間の方が圧倒的に長いのだから読みやすさを大事にするべき、と聞いた気がする。  
これにはとても納得しているし、私自身も読んで理解するのにかかる時間が短いコードがいいコードだと考えているので、Go の思想は魅力的に感じた。

複雑さを隠してシンプルに見せる
====
Go はシンプルに使えるように難しいことは内部で頑張って隠すとのことだった。  
頑張るのはきっと大変なのだろうけど、そこには頑張る価値があるのだろう。  
これは私の勝手な考えなのだが、実装回数と利用回数の問題だと感じた。  
内側にいけばいくほど、機能を実装する回数が少なくなり、利用される回数が多くなる。  
外側にいけばいくほど、機能を実装する回数が多くなり、利用される回数が少なくなる。  
よって、内側の方が複雑度は増すが、内側で頑張って外側をシンプルにした方が最終的に楽できるということだろう。

Go の高まりを感じた
====
Go はコマンドラインツールを簡単に作れるらしい。  
そしてクロスプラットフォームで動くらしい。  
なんか作るときは Go を使う。
